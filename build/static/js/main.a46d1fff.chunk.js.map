{"version":3,"sources":["components/features/isLogin.js","components/Login.js","components/features/name.js","components/features/email.js","components/features/age.js","components/features/total.js","components/Register.js","components/ShowUserDetails.js","components/NotFound.js","App.js","index.js"],"names":["isLoginSlice","createSlice","name","initialState","value","reducers","settingLogin","state","action","payload","actions","Login","props","dispatch","useDispatch","useState","SetName","pass","SetPass","total","useSelector","className","onSubmit","e","preventDefault","loginUser","filter","each","toLowerCase","includes","res","history","push","alert","htmlFor","onChange","event","target","id","type","placeholder","required","title","pattern","to","nameSlice","settingName","emailSlice","settingEmail","ageSlice","settingAge","totalSlice","settingTotal","Register","email","SetEmail","age","SetAge","password","SetPassword","style","display","flexDirection","justifyContent","alignItems","height","v4","margin","ShowUserDetails","isLogin","fontSize","fontFamily","fontStyle","listStyleType","flexFlow","padding","map","color","NotFound","App","exact","path","component","store","configureStore","reducer","nameReducer","emailReducer","ageReducer","totalReducer","isLoginReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a46d1fff.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = \"\";\r\n\r\nexport const isLoginSlice = createSlice({\r\n  name: \"isLogin\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    settingLogin: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { settingLogin } = isLoginSlice.actions;\r\n\r\nexport default isLoginSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { settingLogin } from \"./features/isLogin\";\r\nimport \"./Register.css\";\r\n\r\nfunction Login(props) {\r\n  const dispatch = useDispatch();\r\n  const [name, SetName] = useState(\"\");\r\n  const [pass, SetPass] = useState(\"\");\r\n  const total = useSelector((state) => state.total.value);\r\n\r\n  const onLoginBtnClicked = (e) => {\r\n    e.preventDefault();\r\n\r\n    const loginUser = total.filter((each) =>\r\n      each.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n\r\n    dispatch(settingLogin(loginUser));\r\n\r\n    let res = false;\r\n    for (let each of total) {\r\n      if (each.name === name) {\r\n        res = true;\r\n      }\r\n    }\r\n\r\n    if (res) {\r\n      const { history } = props;\r\n      history.push(\"/user-details\");\r\n    } else {\r\n      alert(\"enter correct details of username and password\");\r\n      SetName(\"\");\r\n      SetPass(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <form onSubmit={onLoginBtnClicked}>\r\n        <div>\r\n          <label htmlFor=\"loginName\">Username</label>\r\n          <input\r\n            onChange={(event) => {\r\n              SetName(event.target.value);\r\n            }}\r\n            id=\"fullName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Full Name\"\r\n            name=\"fullName\"\r\n            value={name}\r\n            required\r\n            title=\"enter your name\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"pass\">Password</label>\r\n          <input\r\n            onChange={(event) => {\r\n              SetPass(event.target.value);\r\n            }}\r\n            id=\"pass\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Your Password\"\r\n            name=\"pass\"\r\n            value={pass}\r\n            required\r\n            pattern=\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{7,}$\"\r\n            title=\"Minimum of 7 characters. Should have at least one special character and one number and one UpperCase Letter.\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">LogIn</button>\r\n      </form>\r\n\r\n      <div className=\"register-card\">\r\n        <p className=\"desc\">New User?Then Register here</p>\r\n        <Link to=\"/\">\r\n          <button type=\"button\" className=\"register-btn\">\r\n            REGISTER\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = \"\";\r\n\r\nexport const nameSlice = createSlice({\r\n  name: \"name\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    settingName: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { settingName } = nameSlice.actions;\r\n\r\nexport default nameSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = \"\";\r\n\r\nexport const emailSlice = createSlice({\r\n  name: \"email\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    settingEmail: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { settingEmail } = emailSlice.actions;\r\n\r\nexport default emailSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = \"\";\r\n\r\nexport const ageSlice = createSlice({\r\n  name: \"age\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    settingAge: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { settingAge } = ageSlice.actions;\r\n\r\nexport default ageSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = [];\r\n\r\nexport const totalSlice = createSlice({\r\n  name: \"total\",\r\n  initialState: { value: initialStateValue },\r\n  reducers: {\r\n    settingTotal: (state, action) => {\r\n      state.value = [...state.value, action.payload];\r\n      //   state.value = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { settingTotal } = totalSlice.actions;\r\n\r\nexport default totalSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { settingName } from \"./features/name\";\r\nimport { settingEmail } from \"./features/email\";\r\nimport { settingAge } from \"./features/age\";\r\nimport { settingTotal } from \"./features/total\";\r\n\r\nimport \"./Register.css\";\r\n\r\nfunction Register(props) {\r\n  const dispatch = useDispatch();\r\n  const [name, SetName] = useState(\"\");\r\n  const [email, SetEmail] = useState(\"\");\r\n  const [age, SetAge] = useState(\"\");\r\n  const [password, SetPassword] = useState(\"\");\r\n\r\n  const onRegisteringData = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(settingName(name));\r\n    dispatch(settingAge(age));\r\n    dispatch(settingEmail(email));\r\n    dispatch(\r\n      settingTotal({\r\n        id: v4(),\r\n        name: name,\r\n        email: email,\r\n        age: age,\r\n        password: password,\r\n      })\r\n    );\r\n\r\n    SetName(\"\");\r\n    SetAge(\"\");\r\n    SetEmail(\"\");\r\n    const { history } = props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"login-card\">\r\n        <p>Already Registered? then click LogIn</p>\r\n        <Link to=\"/login\">\r\n          <button type=\"button\">LogIn</button>\r\n        </Link>\r\n      </div>\r\n\r\n      <form onSubmit={onRegisteringData}>\r\n        {/* NAMe */}\r\n        <h1 style={{ margin: \"20px\" }}>REGISTER FORM</h1>\r\n        <div>\r\n          <label htmlFor=\"fullName\">Full Name</label>\r\n          <input\r\n            onChange={(event) => {\r\n              SetName(event.target.value);\r\n            }}\r\n            id=\"fullName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Full Name\"\r\n            name=\"fullName\"\r\n            value={name}\r\n            required\r\n            title=\"enter your name\"\r\n          />\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Your Email\"\r\n            onChange={(event) => {\r\n              SetEmail(event.target.value);\r\n            }}\r\n            // onBlur={this.onBlurs}\r\n            name=\"email\"\r\n            value={email}\r\n            required\r\n            title=\"enter your email\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"age\">Age</label>\r\n          <input\r\n            onChange={(event) => {\r\n              SetAge(event.target.value);\r\n            }}\r\n            id=\"age\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Age\"\r\n            name=\"age\"\r\n            value={age}\r\n            required\r\n            title=\"enter your age\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"pass\">Password</label>\r\n          <input\r\n            onChange={(event) => {\r\n              SetPassword(event.target.value);\r\n            }}\r\n            id=\"pass\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Your Password\"\r\n            name=\"age\"\r\n            value={password}\r\n            required\r\n            pattern=\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{7,}$\"\r\n            title=\"Minimum of 7 characters. Should have at least one special character and one number and one UpperCase Letter.\"\r\n          />\r\n        </div>\r\n        <input className=\"submit-btn\" type=\"submit\" placeholder=\"Register\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ShowUserDetails = () => {\r\n  const loginUser = useSelector((state) => state.isLogin.value);\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\", fontSize: \"30px\" }}>\r\n      <center>\r\n        <h1 style={{ fontFamily: \"Open Sans\", fontStyle: \"italic\" }}>\r\n          User Details\r\n        </h1>\r\n\r\n        <ul\r\n          style={{\r\n            margin: \"15px\",\r\n            listStyleType: \"none\",\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loginUser.map((each) => (\r\n            <li\r\n              key={each.id}\r\n              style={{\r\n                margin: \"15px\",\r\n                padding: \"5px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              <p style={{ fontSize: \"16px\", fontFamily: \"Open Sans\" }}>\r\n                Name: {each.name}\r\n              </p>\r\n              <p style={{ fontSize: \"16px\", fontFamily: \"Open Sans\" }}>\r\n                Email: {each.email}\r\n              </p>\r\n              <p style={{ fontSize: \"16px\", fontFamily: \"Open Sans\" }}>\r\n                Age: {each.age}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Link to=\"/login\">\r\n          <button type=\"button\">Logout</button>\r\n        </Link>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\nexport default ShowUserDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <center>\r\n        <h1\r\n          style={{\r\n            fontFamily: \"Open Sans\",\r\n            fontSize: \"50px\",\r\n            fontStyle: \"italic\",\r\n          }}\r\n        >\r\n          Bath Path\r\n        </h1>\r\n        Go To Login Page\r\n        <Link to=\"/login\">\r\n          <button>login</button>\r\n        </Link>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport ShowUserDetails from \"./components/ShowUserDetails\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/user-details\" component={ShowUserDetails} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport nameReducer from \"./components/features/name\";\nimport emailReducer from \"./components/features/email\";\nimport ageReducer from \"./components/features/age\";\nimport totalReducer from \"./components/features/total\";\nimport isLoginReducer from \"./components/features/isLogin\";\n\nconst store = configureStore({\n  reducer: {\n    name: nameReducer,\n    email: emailReducer,\n    age: ageReducer,\n    total: totalReducer,\n    isLogin: isLoginReducer,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}